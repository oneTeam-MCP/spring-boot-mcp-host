plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}
ext {
	springAiVersion = "1.0.1"
}

group = 'oneTeam'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Anthropic Claude 모델 스타터
	// implementation 'org.springframework.ai:spring-ai-starter-model-anthropic:1.0.0'

	// OpenAI 전용
	implementation 'org.springframework.ai:spring-ai-starter-model-openai'

	// MCP Client
	implementation('org.springframework.ai:spring-ai-starter-mcp-client:1.0.0') {
		exclude group: 'org.springframework.cloud', module: 'spring-cloud-function-context'
	}

	// LangGraph
	implementation 'org.bsc.langgraph4j:langgraph4j-core:1.6.0-rc2'
	implementation 'org.bsc.langgraph4j:langgraph4j-langchain4j:1.6.0-rc2'
	implementation 'org.bsc.langgraph4j:langgraph4j-spring-ai:1.6.0-rc2'
	implementation "org.bsc.langgraph4j:langgraph4j-springai-agentexecutor:1.6.0-rc2"
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:$springAiVersion"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
